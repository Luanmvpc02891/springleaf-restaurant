{"version":3,"file":"angular-redux-store.umd.js.map","sources":["ng://@angular-redux/store/components/ng-redux.ts","ng://@angular-redux/store/components/dev-tools.ts","../../node_modules/tslib/tslib.es6.js","ng://@angular-redux/store/utils/get-in.ts","ng://@angular-redux/store/utils/set-in.ts","ng://@angular-redux/store/components/fractal-reducer-map.ts","ng://@angular-redux/store/decorators/helpers.ts","ng://@angular-redux/store/decorators/dispatch.ts","ng://@angular-redux/store/decorators/select.ts","ng://@angular-redux/store/decorators/with-sub-store.ts","ng://@angular-redux/store/utils/assert.ts","ng://@angular-redux/store/components/selectors.ts","ng://@angular-redux/store/components/sub-store.ts","ng://@angular-redux/store/components/root-store.ts","ng://@angular-redux/store/ng-redux.module.ts"],"sourcesContent":["import {\n  AnyAction,\n  Dispatch,\n  Middleware,\n  Reducer,\n  Store,\n  StoreEnhancer,\n  Unsubscribe,\n} from 'redux';\nimport { Observable } from 'rxjs';\nimport { ObservableStore } from './observable-store';\nimport { Comparator, PathSelector, Selector } from './selectors';\n\n/**\n * This is the public interface of @angular-redux/store. It wraps the global\n * redux store and adds a few other add on methods. It's what you'll inject\n * into your Angular application as a service.\n */\nexport abstract class NgRedux<RootState> implements ObservableStore<RootState> {\n  /** @hidden, @deprecated */\n  static instance?: ObservableStore<any> = undefined;\n\n  /**\n   * Configures a Redux store and allows NgRedux to observe and dispatch\n   * to it.\n   *\n   * This should only be called once for the lifetime of your app, for\n   * example in the constructor of your root component.\n   *\n   * @param rootReducer Your app's root reducer\n   * @param initState Your app's initial state\n   * @param middleware Optional Redux middlewares\n   * @param enhancers Optional Redux store enhancers\n   */\n  abstract configureStore: (\n    rootReducer: Reducer<RootState, AnyAction>,\n    initState: RootState,\n    middleware?: Middleware[],\n    enhancers?: StoreEnhancer<RootState>[],\n  ) => void;\n\n  /**\n   * Accepts a Redux store, then sets it in NgRedux and\n   * allows NgRedux to observe and dispatch to it.\n   *\n   * This should only be called once for the lifetime of your app, for\n   * example in the constructor of your root component. If configureStore\n   * has been used this cannot be used.\n   *\n   * @param store Your app's store\n   */\n  abstract provideStore: (store: Store<RootState>) => void;\n\n  // Redux Store methods\n  abstract dispatch: Dispatch<AnyAction>;\n  abstract getState: () => RootState;\n  abstract subscribe: (listener: () => void) => Unsubscribe;\n  abstract replaceReducer: (nextReducer: Reducer<RootState, AnyAction>) => void;\n\n  // ObservableStore methods.\n  abstract select: <SelectedType>(\n    selector?: Selector<RootState, SelectedType>,\n    comparator?: Comparator,\n  ) => Observable<SelectedType>;\n  abstract configureSubStore: <SubState>(\n    basePath: PathSelector,\n    localReducer: Reducer<SubState, AnyAction>,\n  ) => ObservableStore<SubState>;\n}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { AnyAction, StoreEnhancer, Unsubscribe } from 'redux';\nimport { EnhancerOptions } from 'redux-devtools-extension';\nimport { NgRedux } from './ng-redux';\n\nexport interface ReduxDevTools {\n  (options: EnhancerOptions): StoreEnhancer<any>;\n  listen: (\n    onMessage: (message: AnyAction) => void,\n    instanceId?: string,\n  ) => void;\n}\n\ninterface WindowWithReduxDevTools extends Window {\n  __REDUX_DEVTOOLS_EXTENSION__?: ReduxDevTools;\n  devToolsExtension?: ReduxDevTools;\n}\n\nconst environment: WindowWithReduxDevTools = (typeof window !== 'undefined'\n  ? window\n  : {}) as WindowWithReduxDevTools;\n\n/**\n * An angular-2-ified version of the Redux DevTools chrome extension.\n */\n@Injectable()\nexport class DevToolsExtension {\n  /** @hidden */\n  constructor(private appRef: ApplicationRef, private ngRedux: NgRedux<any>) {}\n\n  /**\n   * A wrapper for the Chrome Extension Redux DevTools.\n   * Makes sure state changes triggered by the extension\n   * trigger Angular2's change detector.\n   *\n   * @argument options: dev tool options; same\n   * format as described here:\n   * [zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md]\n   */\n  enhancer = (options?: EnhancerOptions) => {\n    let subscription: Unsubscribe;\n    if (!this.isEnabled()) {\n      return null;\n    }\n\n    // Make sure changes from dev tools update angular's view.\n    this.getDevTools()!.listen(({ type }) => {\n      if (type === 'START') {\n        subscription = this.ngRedux.subscribe(() => {\n          if (!NgZone.isInAngularZone()) {\n            this.appRef.tick();\n          }\n        });\n      } else if (type === 'STOP') {\n        subscription();\n      }\n    });\n\n    return this.getDevTools()!(options || {});\n  };\n\n  /**\n   * Returns true if the extension is installed and enabled.\n   */\n  isEnabled = () => !!this.getDevTools();\n\n  /**\n   * Returns the redux devtools enhancer.\n   */\n  getDevTools = () =>\n    environment &&\n    (environment.__REDUX_DEVTOOLS_EXTENSION__ || environment.devToolsExtension);\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Gets a deeply-nested property value from an object, given a 'path'\n * of property names or array indices.\n *\n * @hidden\n */\nexport function getIn(\n  v: any | undefined,\n  pathElems: (string | number)[],\n): any | undefined {\n  if (!v) {\n    return v;\n  }\n\n  // If this is an ImmutableJS structure, use existing getIn function\n  if ('function' === typeof v.getIn) {\n    return v.getIn(pathElems);\n  }\n\n  const [firstElem, ...restElems] = pathElems;\n\n  if (undefined === v[firstElem]) {\n    return undefined;\n  }\n\n  if (restElems.length === 0) {\n    return v[firstElem];\n  }\n\n  return getIn(v[firstElem], restElems);\n}\n","/**\n * Sets a deeply-nested property value from an object, given a 'path'\n * of property names or array indices. Path elements are created if\n * not there already. Does not mutate the given object.\n *\n * @hidden\n */\nexport const setIn = (\n  obj: any,\n  [firstElem, ...restElems]: (string | number)[],\n  value: any,\n): object =>\n  'function' === typeof (obj[firstElem] || {}).setIn\n    ? {\n        ...obj,\n        [firstElem]: obj[firstElem].setIn(restElems, value),\n      }\n    : {\n        ...obj,\n        [firstElem]:\n          restElems.length === 0\n            ? value\n            : setIn(obj[firstElem] || {}, restElems, value),\n      };\n","import { AnyAction, Reducer } from 'redux';\nimport { getIn } from '../utils/get-in';\nimport { setIn } from '../utils/set-in';\nimport { PathSelector } from './selectors';\n\nlet reducerMap: { [id: string]: Reducer<any, AnyAction> } = {};\n\nconst composeReducers = (\n  ...reducers: Reducer<any, AnyAction>[]\n): Reducer<any, AnyAction> => (state: any, action: AnyAction) =>\n  reducers.reduce((subState, reducer) => reducer(subState, action), state);\n\n/**\n * @param rootReducer Call this on your root reducer to enable SubStore\n * functionality for pre-configured stores (e.g. using NgRedux.provideStore()).\n * NgRedux.configureStore\n * does it for you under the hood.\n */\nexport function enableFractalReducers(rootReducer: Reducer<any, AnyAction>) {\n  reducerMap = {};\n  return composeReducers(rootFractalReducer, rootReducer);\n}\n\n/** @hidden */\nexport function registerFractalReducer(\n  basePath: PathSelector,\n  localReducer: Reducer<any, AnyAction>,\n): void {\n  const existingFractalReducer = reducerMap[JSON.stringify(basePath)];\n  if (existingFractalReducer && existingFractalReducer !== localReducer) {\n    throw new Error(\n      `attempt to overwrite fractal reducer for basePath ${basePath}`,\n    );\n  }\n\n  reducerMap[JSON.stringify(basePath)] = localReducer;\n}\n\n/** @hidden */\nexport function replaceLocalReducer(\n  basePath: PathSelector,\n  nextLocalReducer: Reducer<any, AnyAction>,\n): void {\n  reducerMap[JSON.stringify(basePath)] = nextLocalReducer;\n}\n\nfunction rootFractalReducer(\n  state: {} = {},\n  action: AnyAction & { '@angular-redux::fractalkey'?: string },\n) {\n  const fractalKey = action['@angular-redux::fractalkey'];\n  const fractalPath = fractalKey ? JSON.parse(fractalKey) : [];\n  const localReducer = reducerMap[fractalKey || ''];\n  return fractalKey && localReducer\n    ? setIn(state, fractalPath, localReducer(getIn(state, fractalPath), action))\n    : state;\n}\n","import { AnyAction, Reducer } from 'redux';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { NgRedux } from '../components/ng-redux';\nimport { ObservableStore } from '../components/observable-store';\nimport {\n  Comparator,\n  PathSelector,\n  Selector,\n  Transformer,\n} from '../components/selectors';\n\n/**\n * Used with the `@WithSubStore` class decorator to define a SubStore (AKA a\n * fractal store).\n *\n * For more info on substores, see\n * https://github.com/angular-redux/platform/blob/master/packages/store/articles/fractal-store.md\n */\nexport interface FractalStoreOptions {\n  /**\n   * The name of an instance method that will define the\n   * base path for the subStore. This method is expected to return an array\n   * of property names or undefined/null.\n   */\n  basePathMethodName: string;\n\n  /**\n   * The localReducer for the substore in question.\n   */\n  localReducer: Reducer<any, AnyAction>;\n}\n\n/**\n * OPTIONS_KEY: this is per-class (static) and holds the config from the\n * @SubStore decorator.\n */\nconst OPTIONS_KEY = '@angular-redux::substore::class::options';\n\n/**\n * INSTANCE_SUBSTORE_KEY, INSTANCE_SELECTIONS_KEY: these are per-instance\n * (non-static) and holds references to the substores/selected observables\n * to be used by an instance of a decorated class. I'm not using\n * reflect-metadata here because I want\n *\n * 1. different instances to have different substores in the case where\n * `basePathMethodName` is dynamic.\n * 2. the instance substore to be garbage collected when the instance is no\n * longer reachable.\n * This is therefore an own-property on the actual instance of the decorated\n * class.\n */\nconst INSTANCE_SUBSTORE_KEY = '@angular-redux::substore::instance::store';\nconst INSTANCE_SELECTIONS_KEY =\n  '@angular-redux::substore::instance::selections';\n\n/**\n * Used to detect when the base path changes - this allows components to\n * dynamically adjust their selections if necessary.\n */\nconst INSTANCE_BASE_PATH_KEY = '@angular-redux::substore::instance::basepath';\n\nconst getClassOptions = (decoratedInstance: any): FractalStoreOptions =>\n  decoratedInstance.constructor[OPTIONS_KEY];\n\n/** @hidden */\nexport const setClassOptions = (\n  decoratedClassConstructor: any,\n  options: FractalStoreOptions,\n): void => {\n  decoratedClassConstructor[OPTIONS_KEY] = options;\n};\n\n// I want the store to be saved on the actual instance so\n// 1. different instances can have distinct substores if necessary\n// 2. the substore/selections will be marked for garbage collection when the\n//    instance is destroyed.\nconst setInstanceStore = (\n  decoratedInstance: any,\n  store?: ObservableStore<any>,\n) => (decoratedInstance[INSTANCE_SUBSTORE_KEY] = store);\n\nconst getInstanceStore = (decoratedInstance: any): ObservableStore<any> =>\n  decoratedInstance[INSTANCE_SUBSTORE_KEY];\n\nconst getInstanceSelectionMap = (decoratedInstance: any) => {\n  const map = decoratedInstance[INSTANCE_SELECTIONS_KEY] || {};\n  decoratedInstance[INSTANCE_SELECTIONS_KEY] = map;\n  return map;\n};\n\nconst hasBasePathChanged = (\n  decoratedInstance: any,\n  basePath?: PathSelector,\n): boolean =>\n  decoratedInstance[INSTANCE_BASE_PATH_KEY] !== (basePath || []).toString();\n\nconst setInstanceBasePath = (\n  decoratedInstance: any,\n  basePath?: PathSelector,\n): void => {\n  decoratedInstance[INSTANCE_BASE_PATH_KEY] = (basePath || []).toString();\n};\n\nconst clearInstanceState = (decoratedInstance: any) => {\n  decoratedInstance[INSTANCE_SELECTIONS_KEY] = null;\n  decoratedInstance[INSTANCE_SUBSTORE_KEY] = null;\n  decoratedInstance[INSTANCE_BASE_PATH_KEY] = null;\n};\n\n/**\n * Gets the store associated with a decorated instance (e.g. a\n * component or service)\n * @hidden\n */\nexport const getBaseStore = (\n  decoratedInstance: any,\n): ObservableStore<any> | undefined => {\n  // The root store hasn't been set up yet.\n  if (!NgRedux.instance) {\n    return undefined;\n  }\n\n  const options = getClassOptions(decoratedInstance);\n\n  // This is not decorated with `@WithSubStore`. Return the root store.\n  if (!options) {\n    return NgRedux.instance;\n  }\n\n  // Dynamic base path support:\n  const basePath = decoratedInstance[options.basePathMethodName]();\n  if (hasBasePathChanged(decoratedInstance, basePath)) {\n    clearInstanceState(decoratedInstance);\n    setInstanceBasePath(decoratedInstance, basePath);\n  }\n\n  if (!basePath) {\n    return NgRedux.instance;\n  }\n\n  const store = getInstanceStore(decoratedInstance);\n  if (!store) {\n    setInstanceStore(\n      decoratedInstance,\n      NgRedux.instance.configureSubStore(basePath, options.localReducer),\n    );\n  }\n\n  return getInstanceStore(decoratedInstance);\n};\n\n/**\n * Creates an Observable from the given selection parameters,\n * rooted at decoratedInstance's store, and caches it on the\n * instance for future use.\n * @hidden\n */\nexport const getInstanceSelection = <T>(\n  decoratedInstance: any,\n  key: string | symbol,\n  selector: Selector<any, T>,\n  transformer?: Transformer<any, T>,\n  comparator?: Comparator,\n) => {\n  const store = getBaseStore(decoratedInstance);\n\n  if (store) {\n    const selections = getInstanceSelectionMap(decoratedInstance);\n\n    selections[key] =\n      selections[key] ||\n      (!transformer\n        ? store.select(selector, comparator)\n        : store.select(selector).pipe(\n            obs$ => transformer(obs$, decoratedInstance),\n            distinctUntilChanged(comparator),\n          ));\n\n    return selections[key];\n  }\n\n  return undefined;\n};\n","import { Action } from 'redux';\n\nimport { NgRedux } from '../components/ng-redux';\nimport { getBaseStore } from './helpers';\n\n/**\n * Auto-dispatches the return value of the decorated function.\n *\n * Decorate a function creator method with @dispatch and its return\n * value will automatically be passed to ngRedux.dispatch() for you.\n */\nexport function dispatch(): PropertyDecorator {\n  return function decorate(\n    target: object,\n    key: string | symbol | number,\n    descriptor?: PropertyDescriptor,\n  ): PropertyDescriptor {\n    let originalMethod: () => Action;\n\n    const wrapped = function(this: unknown, ...args: any) {\n      const result = originalMethod.apply(this, args);\n      if (result !== undefined) {\n        const store = getBaseStore(this) || NgRedux.instance;\n        if (store) {\n          store.dispatch(result);\n        }\n      }\n      return result;\n    };\n\n    descriptor = descriptor || Object.getOwnPropertyDescriptor(target, key);\n\n    if (descriptor === undefined) {\n      const dispatchDescriptor: PropertyDescriptor = {\n        get: () => wrapped,\n        set: setMethod => (originalMethod = setMethod),\n      };\n      Object.defineProperty(target, key, dispatchDescriptor);\n      return dispatchDescriptor;\n    } else {\n      originalMethod = descriptor.value;\n      descriptor.value = wrapped;\n      return descriptor;\n    }\n  };\n}\n// get descriptor\n// if no descriptor, create one with getter setter\n// if descriptor, set original method to descriptor, and then bind the wrapped function instead\n","import { Comparator, Selector, Transformer } from '../components/selectors';\nimport { getInstanceSelection } from './helpers';\n\n/**\n * Selects an observable from the store, and attaches it to the decorated\n * property.\n *\n * ```ts\n *  import { select } from '@angular-redux/store';\n *\n *  class SomeClass {\n *    @select(['foo','bar']) foo$: Observable<string>\n * }\n * ```\n *\n * @param selector\n * A selector function, property name string, or property name path\n * (array of strings/array indices) that locates the store data to be\n * selected\n *\n * @param comparator Function used to determine if this selector has changed.\n */\nexport function select<T>(\n  selector?: Selector<any, T>,\n  comparator?: Comparator,\n): PropertyDecorator {\n  return (target: any, key: string | symbol): void => {\n    const adjustedSelector = selector\n      ? selector\n      : String(key).lastIndexOf('$') === String(key).length - 1\n      ? String(key).substring(0, String(key).length - 1)\n      : key;\n    decorate(adjustedSelector, undefined, comparator)(target, key);\n  };\n}\n\n/**\n * Selects an observable using the given path selector, and runs it through the\n * given transformer function. A transformer function takes the store\n * observable as an input and returns a derived observable from it. That derived\n *  observable is run through distinctUntilChanges with the given optional\n * comparator and attached to the store property.\n *\n * Think of a Transformer as a FunctionSelector that operates on observables\n * instead of values.\n *\n * ```ts\n * import { select$ } from 'angular-redux/store';\n *\n * export const debounceAndTriple = obs$ => obs$\n *  .debounce(300)\n *  .map(x => 3 * x);\n *\n * class Foo {\n *  @select$(['foo', 'bar'], debounceAndTriple)\n *  readonly debouncedFooBar$: Observable<number>;\n * }\n * ```\n */\nexport function select$<T>(\n  selector: Selector<any, T>,\n  transformer: Transformer<any, T>,\n  comparator?: Comparator,\n): PropertyDecorator {\n  return decorate(selector, transformer, comparator);\n}\n\nfunction decorate(\n  selector: Selector<any, any>,\n  transformer?: Transformer<any, any>,\n  comparator?: Comparator,\n): PropertyDecorator {\n  return function decorator(target: any, key): void {\n    function getter(this: any) {\n      return getInstanceSelection(this, key, selector, transformer, comparator);\n    }\n\n    // Replace decorated property with a getter that returns the observable.\n    if (delete target[key]) {\n      Object.defineProperty(target, key, {\n        get: getter,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  };\n}\n","import { FractalStoreOptions, setClassOptions } from './helpers';\n\n/**\n * Modifies the behaviour of any `@select`, `@select$`, or `@dispatch`\n * decorators to operate on a substore defined by the IFractalStoreOptions.\n *\n * See:\n * https://github.com/angular-redux/platform/blob/master/packages/store/articles/fractal-store.md\n * for more information about SubStores.\n */\nexport function WithSubStore({\n  basePathMethodName,\n  localReducer,\n}: FractalStoreOptions): ClassDecorator {\n  return function decorate(constructor: Function): void {\n    setClassOptions(constructor, {\n      basePathMethodName,\n      localReducer,\n    });\n  };\n}\n","/** @hidden */\nexport const assert = (condition: boolean, message: string): void => {\n  if (!condition) {\n    throw new Error(message);\n  }\n};\n","import { Observable } from 'rxjs';\nimport { getIn } from '../utils/get-in';\n\n/**\n * Custom equality checker that can be used with `.select` and `@select`.\n * ```ts\n * const customCompare: Comparator = (x: any, y: any) => {\n *  return x.id === y.id\n * }\n *\n * @select(selector, customCompare)\n * ```\n */\nexport type Comparator = (x: any, y: any) => boolean;\nexport type Transformer<RootState, V> = (\n  store$: Observable<RootState>,\n  scope: any,\n) => Observable<V>;\nexport type PropertySelector = string | number | symbol;\nexport type PathSelector = (string | number)[];\nexport type FunctionSelector<RootState, S> = (s: RootState) => S;\nexport type Selector<RootState, S> =\n  | PropertySelector\n  | PathSelector\n  | FunctionSelector<RootState, S>;\n\n/** @hidden */\nexport const sniffSelectorType = <RootState, S>(\n  selector?: Selector<RootState, S>,\n) =>\n  !selector\n    ? 'nil'\n    : Array.isArray(selector)\n    ? 'path'\n    : 'function' === typeof selector\n    ? 'function'\n    : 'property';\n\n/** @hidden */\nexport const resolver = <RootState, S>(selector?: Selector<RootState, S>) => ({\n  property: (state: any) =>\n    state ? state[selector as PropertySelector] : undefined,\n  path: (state: RootState) => getIn(state, selector as PathSelector),\n  function: selector as FunctionSelector<RootState, S>,\n  nil: (state: RootState) => state,\n});\n\n/** @hidden */\nexport const resolveToFunctionSelector = <RootState, S>(\n  selector?: Selector<RootState, S>,\n) => resolver(selector)[sniffSelectorType(selector)];\n","import { AnyAction, Dispatch, Reducer } from 'redux';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { getIn } from '../utils/get-in';\nimport {\n  registerFractalReducer,\n  replaceLocalReducer,\n} from './fractal-reducer-map';\nimport { NgRedux } from './ng-redux';\nimport { ObservableStore } from './observable-store';\nimport {\n  Comparator,\n  PathSelector,\n  resolveToFunctionSelector,\n  Selector,\n} from './selectors';\n\n/** @hidden */\nexport class SubStore<State> implements ObservableStore<State> {\n  constructor(\n    private rootStore: NgRedux<any>,\n    private basePath: PathSelector,\n    localReducer: Reducer<State, AnyAction>,\n  ) {\n    registerFractalReducer(basePath, localReducer);\n  }\n\n  dispatch: Dispatch<AnyAction> = action =>\n    this.rootStore.dispatch({\n      ...(action as any),\n      '@angular-redux::fractalkey': JSON.stringify(this.basePath),\n    });\n\n  getState = (): State => getIn(this.rootStore.getState(), this.basePath);\n\n  configureSubStore = <SubState>(\n    basePath: PathSelector,\n    localReducer: Reducer<SubState, AnyAction>,\n  ): ObservableStore<SubState> =>\n    new SubStore<SubState>(\n      this.rootStore,\n      [...this.basePath, ...basePath],\n      localReducer,\n    );\n\n  select = <SelectedState>(\n    selector?: Selector<State, SelectedState>,\n    comparator?: Comparator,\n  ): Observable<SelectedState> =>\n    this.rootStore.select<State>(this.basePath).pipe(\n      map(resolveToFunctionSelector(selector)),\n      distinctUntilChanged(comparator),\n    );\n\n  subscribe = (listener: () => void): (() => void) => {\n    const subscription = this.select().subscribe(listener);\n    return () => subscription.unsubscribe();\n  };\n\n  replaceReducer = (nextLocalReducer: Reducer<State, AnyAction>) =>\n    replaceLocalReducer(this.basePath, nextLocalReducer);\n}\n","import {\n  AnyAction,\n  applyMiddleware,\n  compose,\n  createStore,\n  Dispatch,\n  Middleware,\n  Reducer,\n  Store,\n  StoreCreator,\n  StoreEnhancer,\n  Unsubscribe,\n} from 'redux';\n\nimport { NgZone } from '@angular/core';\nimport { BehaviorSubject, Observable, Observer } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { assert } from '../utils/assert';\nimport { enableFractalReducers } from './fractal-reducer-map';\nimport { NgRedux } from './ng-redux';\nimport { ObservableStore } from './observable-store';\nimport {\n  Comparator,\n  PathSelector,\n  resolveToFunctionSelector,\n  Selector,\n} from './selectors';\nimport { SubStore } from './sub-store';\n\n/** @hidden */\nexport class RootStore<RootState> extends NgRedux<RootState> {\n  private store: Store<RootState> | undefined = undefined;\n  private store$: BehaviorSubject<RootState>;\n\n  constructor(private ngZone: NgZone) {\n    super();\n\n    NgRedux.instance = this;\n    this.store$ = new BehaviorSubject<RootState | undefined>(undefined).pipe(\n      filter(n => n !== undefined),\n      switchMap(observableStore => observableStore as any),\n      // TODO: fix this? needing to explicitly cast this is wrong\n    ) as BehaviorSubject<RootState>;\n  }\n\n  configureStore = (\n    rootReducer: Reducer<RootState, AnyAction>,\n    initState: RootState,\n    middleware: Middleware[] = [],\n    enhancers: StoreEnhancer<RootState>[] = [],\n  ): void => {\n    assert(!this.store, 'Store already configured!');\n    // Variable-arity compose in typescript FTW.\n    this.setStore(\n      compose<StoreCreator>(\n        applyMiddleware(...middleware),\n        ...enhancers,\n      )(createStore)(enableFractalReducers(rootReducer), initState),\n    );\n  };\n\n  provideStore = (store: Store<RootState>) => {\n    assert(!this.store, 'Store already configured!');\n    this.setStore(store);\n  };\n\n  getState = (): RootState => this.store!.getState();\n\n  subscribe = (listener: () => void): Unsubscribe =>\n    this.store!.subscribe(listener);\n\n  replaceReducer = (nextReducer: Reducer<RootState, AnyAction>): void => {\n    this.store!.replaceReducer(nextReducer);\n  };\n\n  dispatch: Dispatch<AnyAction> = <A extends AnyAction>(action: A): A => {\n    assert(\n      !!this.store,\n      'Dispatch failed: did you forget to configure your store? ' +\n        'https://github.com/angular-redux/platform/blob/master/packages/store/' +\n        'README.md#quick-start',\n    );\n\n    if (!NgZone.isInAngularZone()) {\n      return this.ngZone.run(() => this.store!.dispatch(action));\n    } else {\n      return this.store!.dispatch(action);\n    }\n  };\n\n  select = <SelectedType>(\n    selector?: Selector<RootState, SelectedType>,\n    comparator?: Comparator,\n  ): Observable<SelectedType> =>\n    this.store$.pipe(\n      distinctUntilChanged(),\n      map(resolveToFunctionSelector(selector)),\n      distinctUntilChanged(comparator),\n    );\n\n  configureSubStore = <SubState>(\n    basePath: PathSelector,\n    localReducer: Reducer<SubState, AnyAction>,\n  ): ObservableStore<SubState> =>\n    new SubStore<SubState>(this, basePath, localReducer);\n\n  private setStore(store: Store<RootState>) {\n    this.store = store;\n    const storeServable = this.storeToObservable(store);\n    this.store$.next(storeServable as any);\n  }\n\n  private storeToObservable = (\n    store: Store<RootState>,\n  ): Observable<RootState> =>\n    new Observable<RootState>((observer: Observer<RootState>) => {\n      observer.next(store.getState());\n      const unsubscribeFromRedux = store.subscribe(() =>\n        observer.next(store.getState()),\n      );\n      return () => {\n        unsubscribeFromRedux();\n        observer.complete();\n      };\n    });\n}\n","import { NgModule, NgZone } from '@angular/core';\nimport { DevToolsExtension } from './components/dev-tools';\nimport { NgRedux } from './components/ng-redux';\nimport { RootStore } from './components/root-store';\n\n/** @hidden */\nexport function _ngReduxFactory(ngZone: NgZone) {\n  return new RootStore(ngZone);\n}\n\n@NgModule({\n  providers: [\n    DevToolsExtension,\n    { provide: NgRedux, useFactory: _ngReduxFactory, deps: [NgZone] },\n  ],\n})\nexport class NgReduxModule {}\n"],"names":["NgZone","Injectable","ApplicationRef","distinctUntilChanged","map","tslib_1.__extends","compose","applyMiddleware","createStore","Observable","BehaviorSubject","filter","switchMap","NgModule"],"mappings":";;;;;;;;;;;;;;;;;AAkBA;QAAA;SAkDC;;;;QAhDQ,gBAAQ,GAA0B,SAAS,CAAC;QAgDrD,cAAC;KAlDD;;;;;;AClBA;QAkBM,WAAW,uBAA6B,OAAO,MAAM,KAAK,WAAW;UACvE,MAAM;UACN,EAAE,GAA4B;;;;AAKlC;;QAGE,2BAAoB,MAAsB,EAAU,OAAqB;YAAzE,iBAA6E;YAAzD,WAAM,GAAN,MAAM,CAAgB;YAAU,YAAO,GAAP,OAAO,CAAc;;;;;;;;;;YAWzE,aAAQ,GAAG,UAAC,OAAyB;;oBAC/B,YAAyB;gBAC7B,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,EAAE;oBACrB,OAAO,IAAI,CAAC;iBACb;;gBAGD,mBAAA,KAAI,CAAC,WAAW,EAAE,GAAE,MAAM,CAAC,UAAC,EAAQ;wBAAN,cAAI;oBAChC,IAAI,IAAI,KAAK,OAAO,EAAE;wBACpB,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC;4BACpC,IAAI,CAACA,WAAM,CAAC,eAAe,EAAE,EAAE;gCAC7B,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;6BACpB;yBACF,CAAC,CAAC;qBACJ;yBAAM,IAAI,IAAI,KAAK,MAAM,EAAE;wBAC1B,YAAY,EAAE,CAAC;qBAChB;iBACF,CAAC,CAAC;gBAEH,OAAO,mBAAA,KAAI,CAAC,WAAW,EAAE,GAAE,OAAO,IAAI,EAAE,CAAC,CAAC;aAC3C,CAAC;;;;YAKF,cAAS,GAAG,cAAM,OAAA,CAAC,CAAC,KAAI,CAAC,WAAW,EAAE,GAAA,CAAC;;;;YAKvC,gBAAW,GAAG;gBACZ,OAAA,WAAW;qBACV,WAAW,CAAC,4BAA4B,IAAI,WAAW,CAAC,iBAAiB,CAAC;aAAA,CAAC;SA3CD;;oBAH9EC,eAAU;;;;;wBAzBFC,mBAAc;wBAGd,OAAO;;;QAqEhB,wBAAC;KA/CD;;ICzBA;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/E,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AAEF,aAAgB,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AAED,IAAO,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;AAED,aA6EgB,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;AAED,aAAgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;;;;;;;;;;;;;;;ACpID,aAAgB,KAAK,CACnB,CAAkB,EAClB,SAA8B;QAE9B,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,CAAC,CAAC;SACV;;QAGD,IAAI,UAAU,KAAK,OAAO,CAAC,CAAC,KAAK,EAAE;YACjC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SAC3B;QAEK,IAAA,sBAAqC,EAApC,iBAAS,EAAE,uBAAyB;QAE3C,IAAI,SAAS,KAAK,CAAC,CAAC,SAAS,CAAC,EAAE;YAC9B,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC;SACrB;QAED,OAAO,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;IACxC,CAAC;;;;;;;;;;;;;;ACvBD,QAAa,KAAK,GAAG,UACnB,GAAQ,EACR,EAA8C,EAC9C,KAAU;YADV,eAA8C,EAA7C,iBAAS,EAAE,uBAAY;;QAGxB,OAAA,UAAU,KAAK,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,KAAK;2BAEzC,GAAG,eACL,SAAS,IAAG,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,sBAGhD,GAAG,eACL,SAAS,IACR,SAAS,CAAC,MAAM,KAAK,CAAC;cAClB,KAAK;cACL,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,MACpD;IAXL,CAWK;;;;;;ACtBP;QAII,UAAU,GAA8C,EAAE;;QAExD,eAAe,GAAG;QACtB,kBAAsC;aAAtC,UAAsC,EAAtC,qBAAsC,EAAtC,IAAsC;YAAtC,6BAAsC;;QACV,OAAA,UAAC,KAAU,EAAE,MAAiB;YAC1D,OAAA,QAAQ,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAE,OAAO,IAAK,OAAA,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAA,EAAE,KAAK,CAAC;SAAA;IAD5C,CAC4C;;;;;;;;AAQ1E,aAAgB,qBAAqB,CAAC,WAAoC;QACxE,UAAU,GAAG,EAAE,CAAC;QAChB,OAAO,eAAe,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC;IAC1D,CAAC;;;;;;;AAGD,aAAgB,sBAAsB,CACpC,QAAsB,EACtB,YAAqC;;YAE/B,sBAAsB,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,sBAAsB,IAAI,sBAAsB,KAAK,YAAY,EAAE;YACrE,MAAM,IAAI,KAAK,CACb,uDAAqD,QAAU,CAChE,CAAC;SACH;QAED,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC;IACtD,CAAC;;;;;;;AAGD,aAAgB,mBAAmB,CACjC,QAAsB,EACtB,gBAAyC;QAEzC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,gBAAgB,CAAC;IAC1D,CAAC;;;;;;IAED,SAAS,kBAAkB,CACzB,KAAc,EACd,MAA6D;QAD7D,sBAAA;YAAA,UAAc;;;YAGR,UAAU,GAAG,MAAM,CAAC,4BAA4B,CAAC;;YACjD,WAAW,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE;;YACtD,YAAY,GAAG,UAAU,CAAC,UAAU,IAAI,EAAE,CAAC;QACjD,OAAO,UAAU,IAAI,YAAY;cAC7B,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;cAC1E,KAAK,CAAC;IACZ,CAAC;;;;;;ACvDD;;;;;QAmCM,WAAW,GAAG,0CAA0C;;;;;;;;;;;;;;;QAexD,qBAAqB,GAAG,2CAA2C;;QACnE,uBAAuB,GAC3B,gDAAgD;;;;;;QAM5C,sBAAsB,GAAG,8CAA8C;;QAEvE,eAAe,GAAG,UAAC,iBAAsB;QAC7C,OAAA,iBAAiB,CAAC,WAAW,CAAC,WAAW,CAAC;IAA1C,CAA0C;;;;;AAG5C,QAAa,eAAe,GAAG,UAC7B,yBAA8B,EAC9B,OAA4B;QAE5B,yBAAyB,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC;IACnD,CAAC;;;;;;QAMK,gBAAgB,GAAG,UACvB,iBAAsB,EACtB,KAA4B,IACzB,QAAC,iBAAiB,CAAC,qBAAqB,CAAC,GAAG,KAAK,IAAC;;QAEjD,gBAAgB,GAAG,UAAC,iBAAsB;QAC9C,OAAA,iBAAiB,CAAC,qBAAqB,CAAC;IAAxC,CAAwC;;QAEpC,uBAAuB,GAAG,UAAC,iBAAsB;;YAC/C,GAAG,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,IAAI,EAAE;QAC5D,iBAAiB,CAAC,uBAAuB,CAAC,GAAG,GAAG,CAAC;QACjD,OAAO,GAAG,CAAC;IACb,CAAC;;QAEK,kBAAkB,GAAG,UACzB,iBAAsB,EACtB,QAAuB;QAEvB,OAAA,iBAAiB,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE,QAAQ,EAAE;IAAzE,CAAyE;;QAErE,mBAAmB,GAAG,UAC1B,iBAAsB,EACtB,QAAuB;QAEvB,iBAAiB,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE,QAAQ,EAAE,CAAC;IAC1E,CAAC;;QAEK,kBAAkB,GAAG,UAAC,iBAAsB;QAChD,iBAAiB,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC;QAClD,iBAAiB,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC;QAChD,iBAAiB,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC;IACnD,CAAC;;;;;;;AAOD,QAAa,YAAY,GAAG,UAC1B,iBAAsB;;QAGtB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACrB,OAAO,SAAS,CAAC;SAClB;;YAEK,OAAO,GAAG,eAAe,CAAC,iBAAiB,CAAC;;QAGlD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,OAAO,CAAC,QAAQ,CAAC;SACzB;;;YAGK,QAAQ,GAAG,iBAAiB,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;QAChE,IAAI,kBAAkB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,EAAE;YACnD,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;YACtC,mBAAmB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,OAAO,CAAC,QAAQ,CAAC;SACzB;;YAEK,KAAK,GAAG,gBAAgB,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAAC,KAAK,EAAE;YACV,gBAAgB,CACd,iBAAiB,EACjB,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,CACnE,CAAC;SACH;QAED,OAAO,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;;;;;;;;AAQD,QAAa,oBAAoB,GAAG,UAClC,iBAAsB,EACtB,GAAoB,EACpB,QAA0B,EAC1B,WAAiC,EACjC,UAAuB;;YAEjB,KAAK,GAAG,YAAY,CAAC,iBAAiB,CAAC;QAE7C,IAAI,KAAK,EAAE;;gBACH,UAAU,GAAG,uBAAuB,CAAC,iBAAiB,CAAC;YAE7D,UAAU,CAAC,GAAG,CAAC;gBACb,UAAU,CAAC,GAAG,CAAC;qBACd,CAAC,WAAW;0BACT,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;0BAClC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CACzB,UAAA,IAAI,IAAI,OAAA,WAAW,CAAC,IAAI,EAAE,iBAAiB,CAAC,GAAA,EAC5CC,8BAAoB,CAAC,UAAU,CAAC,CACjC,CAAC,CAAC;YAET,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;;;;;;ACpLD;;;;;;;AASA,aAAgB,QAAQ;QACtB,OAAO,SAAS,QAAQ,CACtB,MAAc,EACd,GAA6B,EAC7B,UAA+B;;gBAE3B,cAA4B;;gBAE1B,OAAO,GAAG;gBAAwB,cAAY;qBAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;oBAAZ,yBAAY;;;oBAC5C,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;gBAC/C,IAAI,MAAM,KAAK,SAAS,EAAE;;wBAClB,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,QAAQ;oBACpD,IAAI,KAAK,EAAE;wBACT,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;qBACxB;iBACF;gBACD,OAAO,MAAM,CAAC;aACf;YAED,UAAU,GAAG,UAAU,IAAI,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAExE,IAAI,UAAU,KAAK,SAAS,EAAE;;oBACtB,kBAAkB,GAAuB;oBAC7C,GAAG,EAAE,cAAM,OAAA,OAAO,GAAA;oBAClB,GAAG,EAAE,UAAA,SAAS,IAAI,QAAC,cAAc,GAAG,SAAS,IAAC;iBAC/C;gBACD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,kBAAkB,CAAC,CAAC;gBACvD,OAAO,kBAAkB,CAAC;aAC3B;iBAAM;gBACL,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;gBAClC,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC;gBAC3B,OAAO,UAAU,CAAC;aACnB;SACF,CAAC;IACJ,CAAC;;;;;;AC5CD;;;;;;;;;;;;;;;;;;;;;AAqBA,aAAgB,MAAM,CACpB,QAA2B,EAC3B,UAAuB;QAEvB,OAAO,UAAC,MAAW,EAAE,GAAoB;;gBACjC,gBAAgB,GAAG,QAAQ;kBAC7B,QAAQ;kBACR,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC;sBACvD,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;sBAChD,GAAG;YACP,QAAQ,CAAC,gBAAgB,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SAChE,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBD,aAAgB,OAAO,CACrB,QAA0B,EAC1B,WAAgC,EAChC,UAAuB;QAEvB,OAAO,QAAQ,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IACrD,CAAC;;;;;;;IAED,SAAS,QAAQ,CACf,QAA4B,EAC5B,WAAmC,EACnC,UAAuB;QAEvB,OAAO,SAAS,SAAS,CAAC,MAAW,EAAE,GAAG;;;;;YACxC,SAAS,MAAM;gBACb,OAAO,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;aAC3E;;YAGD,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,EAAE;gBACtB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE;oBACjC,GAAG,EAAE,MAAM;oBACX,UAAU,EAAE,IAAI;oBAChB,YAAY,EAAE,IAAI;iBACnB,CAAC,CAAC;aACJ;SACF,CAAC;IACJ,CAAC;;;;;;ACtFD;;;;;;;;;;AAUA,aAAgB,YAAY,CAAC,EAGP;YAFpB,0CAAkB,EAClB,8BAAY;QAEZ,OAAO,SAAS,QAAQ,CAAC,WAAqB;YAC5C,eAAe,CAAC,WAAW,EAAE;gBAC3B,kBAAkB,oBAAA;gBAClB,YAAY,cAAA;aACb,CAAC,CAAC;SACJ,CAAC;IACJ,CAAC;;;;;;;;;;ACnBD,QAAa,MAAM,GAAG,UAAC,SAAkB,EAAE,OAAe;QACxD,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1B;IACH,CAAC;;;;;;ACJD;;;;AA0BA,QAAa,iBAAiB,GAAG,UAC/B,QAAiC;QAEjC,OAAA,CAAC,QAAQ;cACL,KAAK;cACL,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;kBACvB,MAAM;kBACN,UAAU,KAAK,OAAO,QAAQ;sBAC9B,UAAU;sBACV,UAAU;IANd,CAMc;;;;;AAGhB,QAAa,QAAQ,GAAG,UAAe,QAAiC;QAAK,QAAC;YAC5E,QAAQ,EAAE,UAAC,KAAU;gBACnB,OAAA,KAAK,GAAG,KAAK,oBAAC,QAAQ,GAAqB,GAAG,SAAS;aAAA;YACzD,IAAI,EAAE,UAAC,KAAgB,IAAK,OAAA,KAAK,CAAC,KAAK,qBAAE,QAAQ,GAAiB,GAAA;YAClE,QAAQ,qBAAE,QAAQ,EAAkC;YACpD,GAAG,EAAE,UAAC,KAAgB,IAAK,OAAA,KAAK,GAAA;SACjC;IAN4E,CAM3E;;;;;AAGF,QAAa,yBAAyB,GAAG,UACvC,QAAiC,IAC9B,OAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,GAAA;;;;;;;;;;IC/BpD;;;;QACE,kBACU,SAAuB,EACvB,QAAsB,EAC9B,YAAuC;YAHzC,iBAMC;YALS,cAAS,GAAT,SAAS,CAAc;YACvB,aAAQ,GAAR,QAAQ,CAAc;YAMhC,aAAQ,GAAwB,UAAA,MAAM;gBACpC,OAAA,KAAI,CAAC,SAAS,CAAC,QAAQ,kCACjB,MAAM,OACV,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,IAC3D;aAAA,CAAC;YAEL,aAAQ,GAAG,cAAa,OAAA,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,KAAI,CAAC,QAAQ,CAAC,GAAA,CAAC;YAExE,sBAAiB,GAAG,UAClB,QAAsB,EACtB,YAA0C;gBAE1C,OAAA,IAAI,QAAQ,CACV,KAAI,CAAC,SAAS,WACV,KAAI,CAAC,QAAQ,EAAK,QAAQ,GAC9B,YAAY,CACb;aAAA,CAAC;YAEJ,WAAM,GAAG,UACP,QAAyC,EACzC,UAAuB;gBAEvB,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAQ,KAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC9CC,aAAG,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,EACxCD,8BAAoB,CAAC,UAAU,CAAC,CACjC;aAAA,CAAC;YAEJ,cAAS,GAAG,UAAC,QAAoB;;oBACzB,YAAY,GAAG,KAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACtD,OAAO,cAAM,OAAA,YAAY,CAAC,WAAW,EAAE,GAAA,CAAC;aACzC,CAAC;YAEF,mBAAc,GAAG,UAAC,gBAA2C;gBAC3D,OAAA,mBAAmB,CAAC,KAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC;aAAA,CAAC;YApCrD,sBAAsB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SAChD;QAoCH,eAAC;IAAD,CAAC,IAAA;;;;;;;;;;AChCD;;;;QAA0CE,6BAAkB;QAI1D,mBAAoB,MAAc;YAAlC,YACE,iBAAO,SAQR;YATmB,YAAM,GAAN,MAAM,CAAQ;YAH1B,WAAK,GAAiC,SAAS,CAAC;YAcxD,oBAAc,GAAG,UACf,WAA0C,EAC1C,SAAoB,EACpB,UAA6B,EAC7B,SAA0C;gBAD1C,2BAAA;oBAAA,eAA6B;;gBAC7B,0BAAA;oBAAA,cAA0C;;gBAE1C,MAAM,CAAC,CAAC,KAAI,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;;gBAEjD,KAAI,CAAC,QAAQ,CACXC,aAAO,yBACLC,qBAAe,wBAAI,UAAU,KAC1B,SAAS,GACZC,iBAAW,CAAC,CAAC,qBAAqB,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,CAC9D,CAAC;aACH,CAAC;YAEF,kBAAY,GAAG,UAAC,KAAuB;gBACrC,MAAM,CAAC,CAAC,KAAI,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;gBACjD,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB,CAAC;YAEF,cAAQ,GAAG,cAAiB,OAAA,mBAAA,KAAI,CAAC,KAAK,GAAE,QAAQ,EAAE,GAAA,CAAC;YAEnD,eAAS,GAAG,UAAC,QAAoB;gBAC/B,OAAA,mBAAA,KAAI,CAAC,KAAK,GAAE,SAAS,CAAC,QAAQ,CAAC;aAAA,CAAC;YAElC,oBAAc,GAAG,UAAC,WAA0C;gBAC1D,mBAAA,KAAI,CAAC,KAAK,GAAE,cAAc,CAAC,WAAW,CAAC,CAAC;aACzC,CAAC;YAEF,cAAQ,GAAwB,UAAsB,MAAS;gBAC7D,MAAM,CACJ,CAAC,CAAC,KAAI,CAAC,KAAK,EACZ,2DAA2D;oBACzD,uEAAuE;oBACvE,uBAAuB,CAC1B,CAAC;gBAEF,IAAI,CAACR,WAAM,CAAC,eAAe,EAAE,EAAE;oBAC7B,OAAO,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAM,OAAA,mBAAA,KAAI,CAAC,KAAK,GAAE,QAAQ,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC;iBAC5D;qBAAM;oBACL,OAAO,mBAAA,KAAI,CAAC,KAAK,GAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACrC;aACF,CAAC;YAEF,YAAM,GAAG,UACP,QAA4C,EAC5C,UAAuB;gBAEvB,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CACdG,8BAAoB,EAAE,EACtBC,aAAG,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,EACxCD,8BAAoB,CAAC,UAAU,CAAC,CACjC;aAAA,CAAC;YAEJ,uBAAiB,GAAG,UAClB,QAAsB,EACtB,YAA0C;gBAE1C,OAAA,IAAI,QAAQ,CAAW,KAAI,EAAE,QAAQ,EAAE,YAAY,CAAC;aAAA,CAAC;YAQ/C,uBAAiB,GAAG,UAC1B,KAAuB;gBAEvB,OAAA,IAAIM,eAAU,CAAY,UAAC,QAA6B;oBACtD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;;wBAC1B,oBAAoB,GAAG,KAAK,CAAC,SAAS,CAAC;wBAC3C,OAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;qBAAA,CAChC;oBACD,OAAO;wBACL,oBAAoB,EAAE,CAAC;wBACvB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB,CAAC;iBACH,CAAC;aAAA,CAAC;YAvFH,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC;YACxB,KAAI,CAAC,MAAM,sBAAG,IAAIC,oBAAe,CAAwB,SAAS,CAAC,CAAC,IAAI,CACtEC,gBAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,SAAS,GAAA,CAAC,EAC5BC,mBAAS,CAAC,UAAA,eAAe,8BAAI,eAAe,KAAO,CAAC,CAErD,EAA8B,CAAC;;SACjC;;;;;;QA+DO,4BAAQ;;;;;YAAhB,UAAiB,KAAuB;gBACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;oBACb,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;gBACnD,IAAI,CAAC,MAAM,CAAC,IAAI,oBAAC,aAAa,GAAQ,CAAC;aACxC;QAeH,gBAAC;IAAD,CA/FA,CAA0C,OAAO;;;;;;AC9BjD;;;;;AAMA,aAAgB,eAAe,CAAC,MAAc;QAC5C,OAAO,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;AAED;QAAA;SAM6B;;oBAN5BC,aAAQ,SAAC;wBACR,SAAS,EAAE;4BACT,iBAAiB;4BACjB,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,IAAI,EAAE,CAACb,WAAM,CAAC,EAAE;yBAClE;qBACF;;QAC2B,oBAAC;KAN7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
