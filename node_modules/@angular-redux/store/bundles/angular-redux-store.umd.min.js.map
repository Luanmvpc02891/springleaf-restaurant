{"version":3,"sources":["ng://@angular-redux/store/components/ng-redux.ts","ng://@angular-redux/store/components/dev-tools.ts","../../node_modules/tslib/tslib.es6.js","ng://@angular-redux/store/utils/get-in.ts","ng://@angular-redux/store/utils/set-in.ts","ng://@angular-redux/store/components/fractal-reducer-map.ts","ng://@angular-redux/store/decorators/helpers.ts","ng://@angular-redux/store/decorators/select.ts","ng://@angular-redux/store/utils/assert.ts","ng://@angular-redux/store/components/selectors.ts","ng://@angular-redux/store/components/sub-store.ts","ng://@angular-redux/store/components/root-store.ts","ng://@angular-redux/store/ng-redux.module.ts","ng://@angular-redux/store/decorators/dispatch.ts","ng://@angular-redux/store/decorators/with-sub-store.ts"],"names":["NgRedux","instance","undefined","environment","window","DevToolsExtension","appRef","ngRedux","_this","this","enhancer","options","subscription","isEnabled","getDevTools","listen","_a","type","subscribe","NgZone","isInAngularZone","tick","__REDUX_DEVTOOLS_EXTENSION__","devToolsExtension","Injectable","ApplicationRef","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","getIn","v","pathElems","firstElem","restElems","slice","setIn","obj","_b","_c","_d","reducerMap","composeReducers","reducers","_i","state","action","reduce","subState","reducer","enableFractalReducers","rootReducer","rootFractalReducer","fractalKey","fractalPath","JSON","parse","localReducer","OPTIONS_KEY","INSTANCE_SUBSTORE_KEY","INSTANCE_SELECTIONS_KEY","INSTANCE_BASE_PATH_KEY","getInstanceStore","decoratedInstance","getBaseStore","constructor","basePath","store","basePathMethodName","toString","configureSubStore","getInstanceSelection","key","selector","transformer","comparator","map","selections","select","pipe","obs$","distinctUntilChanged","decorate","target","defineProperty","get","getter","enumerable","configurable","assert","condition","message","Error","resolveToFunctionSelector","property","path","function","nil","isArray","SubStore","rootStore","dispatch","@angular-redux::fractalkey","stringify","getState","listener","unsubscribe","replaceReducer","nextLocalReducer","replaceLocalReducer","registerFractalReducer","existingFractalReducer","RootStore","ngZone","_super","configureStore","initState","middleware","enhancers","setStore","compose","applyMiddleware","createStore","provideStore","nextReducer","run","store$","storeToObservable","Observable","observer","unsubscribeFromRedux","complete","BehaviorSubject","filter","switchMap","observableStore","__extends","__","create","tslib_1.__extends","storeServable","_ngReduxFactory","NgReduxModule","NgModule","args","providers","provide","useFactory","deps","String","lastIndexOf","substring","select$","descriptor","originalMethod","wrapped","result","getOwnPropertyDescriptor","dispatchDescriptor","set","setMethod","WithSubStore"],"mappings":"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","sourcesContent":["import {\n  AnyAction,\n  Dispatch,\n  Middleware,\n  Reducer,\n  Store,\n  StoreEnhancer,\n  Unsubscribe,\n} from 'redux';\nimport { Observable } from 'rxjs';\nimport { ObservableStore } from './observable-store';\nimport { Comparator, PathSelector, Selector } from './selectors';\n\n/**\n * This is the public interface of @angular-redux/store. It wraps the global\n * redux store and adds a few other add on methods. It's what you'll inject\n * into your Angular application as a service.\n */\nexport abstract class NgRedux<RootState> implements ObservableStore<RootState> {\n  /** @hidden, @deprecated */\n  static instance?: ObservableStore<any> = undefined;\n\n  /**\n   * Configures a Redux store and allows NgRedux to observe and dispatch\n   * to it.\n   *\n   * This should only be called once for the lifetime of your app, for\n   * example in the constructor of your root component.\n   *\n   * @param rootReducer Your app's root reducer\n   * @param initState Your app's initial state\n   * @param middleware Optional Redux middlewares\n   * @param enhancers Optional Redux store enhancers\n   */\n  abstract configureStore: (\n    rootReducer: Reducer<RootState, AnyAction>,\n    initState: RootState,\n    middleware?: Middleware[],\n    enhancers?: StoreEnhancer<RootState>[],\n  ) => void;\n\n  /**\n   * Accepts a Redux store, then sets it in NgRedux and\n   * allows NgRedux to observe and dispatch to it.\n   *\n   * This should only be called once for the lifetime of your app, for\n   * example in the constructor of your root component. If configureStore\n   * has been used this cannot be used.\n   *\n   * @param store Your app's store\n   */\n  abstract provideStore: (store: Store<RootState>) => void;\n\n  // Redux Store methods\n  abstract dispatch: Dispatch<AnyAction>;\n  abstract getState: () => RootState;\n  abstract subscribe: (listener: () => void) => Unsubscribe;\n  abstract replaceReducer: (nextReducer: Reducer<RootState, AnyAction>) => void;\n\n  // ObservableStore methods.\n  abstract select: <SelectedType>(\n    selector?: Selector<RootState, SelectedType>,\n    comparator?: Comparator,\n  ) => Observable<SelectedType>;\n  abstract configureSubStore: <SubState>(\n    basePath: PathSelector,\n    localReducer: Reducer<SubState, AnyAction>,\n  ) => ObservableStore<SubState>;\n}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { AnyAction, StoreEnhancer, Unsubscribe } from 'redux';\nimport { EnhancerOptions } from 'redux-devtools-extension';\nimport { NgRedux } from './ng-redux';\n\nexport interface ReduxDevTools {\n  (options: EnhancerOptions): StoreEnhancer<any>;\n  listen: (\n    onMessage: (message: AnyAction) => void,\n    instanceId?: string,\n  ) => void;\n}\n\ninterface WindowWithReduxDevTools extends Window {\n  __REDUX_DEVTOOLS_EXTENSION__?: ReduxDevTools;\n  devToolsExtension?: ReduxDevTools;\n}\n\nconst environment: WindowWithReduxDevTools = (typeof window !== 'undefined'\n  ? window\n  : {}) as WindowWithReduxDevTools;\n\n/**\n * An angular-2-ified version of the Redux DevTools chrome extension.\n */\n@Injectable()\nexport class DevToolsExtension {\n  /** @hidden */\n  constructor(private appRef: ApplicationRef, private ngRedux: NgRedux<any>) {}\n\n  /**\n   * A wrapper for the Chrome Extension Redux DevTools.\n   * Makes sure state changes triggered by the extension\n   * trigger Angular2's change detector.\n   *\n   * @argument options: dev tool options; same\n   * format as described here:\n   * [zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md]\n   */\n  enhancer = (options?: EnhancerOptions) => {\n    let subscription: Unsubscribe;\n    if (!this.isEnabled()) {\n      return null;\n    }\n\n    // Make sure changes from dev tools update angular's view.\n    this.getDevTools()!.listen(({ type }) => {\n      if (type === 'START') {\n        subscription = this.ngRedux.subscribe(() => {\n          if (!NgZone.isInAngularZone()) {\n            this.appRef.tick();\n          }\n        });\n      } else if (type === 'STOP') {\n        subscription();\n      }\n    });\n\n    return this.getDevTools()!(options || {});\n  };\n\n  /**\n   * Returns true if the extension is installed and enabled.\n   */\n  isEnabled = () => !!this.getDevTools();\n\n  /**\n   * Returns the redux devtools enhancer.\n   */\n  getDevTools = () =>\n    environment &&\n    (environment.__REDUX_DEVTOOLS_EXTENSION__ || environment.devToolsExtension);\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Gets a deeply-nested property value from an object, given a 'path'\n * of property names or array indices.\n *\n * @hidden\n */\nexport function getIn(\n  v: any | undefined,\n  pathElems: (string | number)[],\n): any | undefined {\n  if (!v) {\n    return v;\n  }\n\n  // If this is an ImmutableJS structure, use existing getIn function\n  if ('function' === typeof v.getIn) {\n    return v.getIn(pathElems);\n  }\n\n  const [firstElem, ...restElems] = pathElems;\n\n  if (undefined === v[firstElem]) {\n    return undefined;\n  }\n\n  if (restElems.length === 0) {\n    return v[firstElem];\n  }\n\n  return getIn(v[firstElem], restElems);\n}\n","/**\n * Sets a deeply-nested property value from an object, given a 'path'\n * of property names or array indices. Path elements are created if\n * not there already. Does not mutate the given object.\n *\n * @hidden\n */\nexport const setIn = (\n  obj: any,\n  [firstElem, ...restElems]: (string | number)[],\n  value: any,\n): object =>\n  'function' === typeof (obj[firstElem] || {}).setIn\n    ? {\n        ...obj,\n        [firstElem]: obj[firstElem].setIn(restElems, value),\n      }\n    : {\n        ...obj,\n        [firstElem]:\n          restElems.length === 0\n            ? value\n            : setIn(obj[firstElem] || {}, restElems, value),\n      };\n","import { AnyAction, Reducer } from 'redux';\nimport { getIn } from '../utils/get-in';\nimport { setIn } from '../utils/set-in';\nimport { PathSelector } from './selectors';\n\nlet reducerMap: { [id: string]: Reducer<any, AnyAction> } = {};\n\nconst composeReducers = (\n  ...reducers: Reducer<any, AnyAction>[]\n): Reducer<any, AnyAction> => (state: any, action: AnyAction) =>\n  reducers.reduce((subState, reducer) => reducer(subState, action), state);\n\n/**\n * @param rootReducer Call this on your root reducer to enable SubStore\n * functionality for pre-configured stores (e.g. using NgRedux.provideStore()).\n * NgRedux.configureStore\n * does it for you under the hood.\n */\nexport function enableFractalReducers(rootReducer: Reducer<any, AnyAction>) {\n  reducerMap = {};\n  return composeReducers(rootFractalReducer, rootReducer);\n}\n\n/** @hidden */\nexport function registerFractalReducer(\n  basePath: PathSelector,\n  localReducer: Reducer<any, AnyAction>,\n): void {\n  const existingFractalReducer = reducerMap[JSON.stringify(basePath)];\n  if (existingFractalReducer && existingFractalReducer !== localReducer) {\n    throw new Error(\n      `attempt to overwrite fractal reducer for basePath ${basePath}`,\n    );\n  }\n\n  reducerMap[JSON.stringify(basePath)] = localReducer;\n}\n\n/** @hidden */\nexport function replaceLocalReducer(\n  basePath: PathSelector,\n  nextLocalReducer: Reducer<any, AnyAction>,\n): void {\n  reducerMap[JSON.stringify(basePath)] = nextLocalReducer;\n}\n\nfunction rootFractalReducer(\n  state: {} = {},\n  action: AnyAction & { '@angular-redux::fractalkey'?: string },\n) {\n  const fractalKey = action['@angular-redux::fractalkey'];\n  const fractalPath = fractalKey ? JSON.parse(fractalKey) : [];\n  const localReducer = reducerMap[fractalKey || ''];\n  return fractalKey && localReducer\n    ? setIn(state, fractalPath, localReducer(getIn(state, fractalPath), action))\n    : state;\n}\n","import { AnyAction, Reducer } from 'redux';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { NgRedux } from '../components/ng-redux';\nimport { ObservableStore } from '../components/observable-store';\nimport {\n  Comparator,\n  PathSelector,\n  Selector,\n  Transformer,\n} from '../components/selectors';\n\n/**\n * Used with the `@WithSubStore` class decorator to define a SubStore (AKA a\n * fractal store).\n *\n * For more info on substores, see\n * https://github.com/angular-redux/platform/blob/master/packages/store/articles/fractal-store.md\n */\nexport interface FractalStoreOptions {\n  /**\n   * The name of an instance method that will define the\n   * base path for the subStore. This method is expected to return an array\n   * of property names or undefined/null.\n   */\n  basePathMethodName: string;\n\n  /**\n   * The localReducer for the substore in question.\n   */\n  localReducer: Reducer<any, AnyAction>;\n}\n\n/**\n * OPTIONS_KEY: this is per-class (static) and holds the config from the\n * @SubStore decorator.\n */\nconst OPTIONS_KEY = '@angular-redux::substore::class::options';\n\n/**\n * INSTANCE_SUBSTORE_KEY, INSTANCE_SELECTIONS_KEY: these are per-instance\n * (non-static) and holds references to the substores/selected observables\n * to be used by an instance of a decorated class. I'm not using\n * reflect-metadata here because I want\n *\n * 1. different instances to have different substores in the case where\n * `basePathMethodName` is dynamic.\n * 2. the instance substore to be garbage collected when the instance is no\n * longer reachable.\n * This is therefore an own-property on the actual instance of the decorated\n * class.\n */\nconst INSTANCE_SUBSTORE_KEY = '@angular-redux::substore::instance::store';\nconst INSTANCE_SELECTIONS_KEY =\n  '@angular-redux::substore::instance::selections';\n\n/**\n * Used to detect when the base path changes - this allows components to\n * dynamically adjust their selections if necessary.\n */\nconst INSTANCE_BASE_PATH_KEY = '@angular-redux::substore::instance::basepath';\n\nconst getClassOptions = (decoratedInstance: any): FractalStoreOptions =>\n  decoratedInstance.constructor[OPTIONS_KEY];\n\n/** @hidden */\nexport const setClassOptions = (\n  decoratedClassConstructor: any,\n  options: FractalStoreOptions,\n): void => {\n  decoratedClassConstructor[OPTIONS_KEY] = options;\n};\n\n// I want the store to be saved on the actual instance so\n// 1. different instances can have distinct substores if necessary\n// 2. the substore/selections will be marked for garbage collection when the\n//    instance is destroyed.\nconst setInstanceStore = (\n  decoratedInstance: any,\n  store?: ObservableStore<any>,\n) => (decoratedInstance[INSTANCE_SUBSTORE_KEY] = store);\n\nconst getInstanceStore = (decoratedInstance: any): ObservableStore<any> =>\n  decoratedInstance[INSTANCE_SUBSTORE_KEY];\n\nconst getInstanceSelectionMap = (decoratedInstance: any) => {\n  const map = decoratedInstance[INSTANCE_SELECTIONS_KEY] || {};\n  decoratedInstance[INSTANCE_SELECTIONS_KEY] = map;\n  return map;\n};\n\nconst hasBasePathChanged = (\n  decoratedInstance: any,\n  basePath?: PathSelector,\n): boolean =>\n  decoratedInstance[INSTANCE_BASE_PATH_KEY] !== (basePath || []).toString();\n\nconst setInstanceBasePath = (\n  decoratedInstance: any,\n  basePath?: PathSelector,\n): void => {\n  decoratedInstance[INSTANCE_BASE_PATH_KEY] = (basePath || []).toString();\n};\n\nconst clearInstanceState = (decoratedInstance: any) => {\n  decoratedInstance[INSTANCE_SELECTIONS_KEY] = null;\n  decoratedInstance[INSTANCE_SUBSTORE_KEY] = null;\n  decoratedInstance[INSTANCE_BASE_PATH_KEY] = null;\n};\n\n/**\n * Gets the store associated with a decorated instance (e.g. a\n * component or service)\n * @hidden\n */\nexport const getBaseStore = (\n  decoratedInstance: any,\n): ObservableStore<any> | undefined => {\n  // The root store hasn't been set up yet.\n  if (!NgRedux.instance) {\n    return undefined;\n  }\n\n  const options = getClassOptions(decoratedInstance);\n\n  // This is not decorated with `@WithSubStore`. Return the root store.\n  if (!options) {\n    return NgRedux.instance;\n  }\n\n  // Dynamic base path support:\n  const basePath = decoratedInstance[options.basePathMethodName]();\n  if (hasBasePathChanged(decoratedInstance, basePath)) {\n    clearInstanceState(decoratedInstance);\n    setInstanceBasePath(decoratedInstance, basePath);\n  }\n\n  if (!basePath) {\n    return NgRedux.instance;\n  }\n\n  const store = getInstanceStore(decoratedInstance);\n  if (!store) {\n    setInstanceStore(\n      decoratedInstance,\n      NgRedux.instance.configureSubStore(basePath, options.localReducer),\n    );\n  }\n\n  return getInstanceStore(decoratedInstance);\n};\n\n/**\n * Creates an Observable from the given selection parameters,\n * rooted at decoratedInstance's store, and caches it on the\n * instance for future use.\n * @hidden\n */\nexport const getInstanceSelection = <T>(\n  decoratedInstance: any,\n  key: string | symbol,\n  selector: Selector<any, T>,\n  transformer?: Transformer<any, T>,\n  comparator?: Comparator,\n) => {\n  const store = getBaseStore(decoratedInstance);\n\n  if (store) {\n    const selections = getInstanceSelectionMap(decoratedInstance);\n\n    selections[key] =\n      selections[key] ||\n      (!transformer\n        ? store.select(selector, comparator)\n        : store.select(selector).pipe(\n            obs$ => transformer(obs$, decoratedInstance),\n            distinctUntilChanged(comparator),\n          ));\n\n    return selections[key];\n  }\n\n  return undefined;\n};\n","import { Comparator, Selector, Transformer } from '../components/selectors';\nimport { getInstanceSelection } from './helpers';\n\n/**\n * Selects an observable from the store, and attaches it to the decorated\n * property.\n *\n * ```ts\n *  import { select } from '@angular-redux/store';\n *\n *  class SomeClass {\n *    @select(['foo','bar']) foo$: Observable<string>\n * }\n * ```\n *\n * @param selector\n * A selector function, property name string, or property name path\n * (array of strings/array indices) that locates the store data to be\n * selected\n *\n * @param comparator Function used to determine if this selector has changed.\n */\nexport function select<T>(\n  selector?: Selector<any, T>,\n  comparator?: Comparator,\n): PropertyDecorator {\n  return (target: any, key: string | symbol): void => {\n    const adjustedSelector = selector\n      ? selector\n      : String(key).lastIndexOf('$') === String(key).length - 1\n      ? String(key).substring(0, String(key).length - 1)\n      : key;\n    decorate(adjustedSelector, undefined, comparator)(target, key);\n  };\n}\n\n/**\n * Selects an observable using the given path selector, and runs it through the\n * given transformer function. A transformer function takes the store\n * observable as an input and returns a derived observable from it. That derived\n *  observable is run through distinctUntilChanges with the given optional\n * comparator and attached to the store property.\n *\n * Think of a Transformer as a FunctionSelector that operates on observables\n * instead of values.\n *\n * ```ts\n * import { select$ } from 'angular-redux/store';\n *\n * export const debounceAndTriple = obs$ => obs$\n *  .debounce(300)\n *  .map(x => 3 * x);\n *\n * class Foo {\n *  @select$(['foo', 'bar'], debounceAndTriple)\n *  readonly debouncedFooBar$: Observable<number>;\n * }\n * ```\n */\nexport function select$<T>(\n  selector: Selector<any, T>,\n  transformer: Transformer<any, T>,\n  comparator?: Comparator,\n): PropertyDecorator {\n  return decorate(selector, transformer, comparator);\n}\n\nfunction decorate(\n  selector: Selector<any, any>,\n  transformer?: Transformer<any, any>,\n  comparator?: Comparator,\n): PropertyDecorator {\n  return function decorator(target: any, key): void {\n    function getter(this: any) {\n      return getInstanceSelection(this, key, selector, transformer, comparator);\n    }\n\n    // Replace decorated property with a getter that returns the observable.\n    if (delete target[key]) {\n      Object.defineProperty(target, key, {\n        get: getter,\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  };\n}\n","/** @hidden */\nexport const assert = (condition: boolean, message: string): void => {\n  if (!condition) {\n    throw new Error(message);\n  }\n};\n","import { Observable } from 'rxjs';\nimport { getIn } from '../utils/get-in';\n\n/**\n * Custom equality checker that can be used with `.select` and `@select`.\n * ```ts\n * const customCompare: Comparator = (x: any, y: any) => {\n *  return x.id === y.id\n * }\n *\n * @select(selector, customCompare)\n * ```\n */\nexport type Comparator = (x: any, y: any) => boolean;\nexport type Transformer<RootState, V> = (\n  store$: Observable<RootState>,\n  scope: any,\n) => Observable<V>;\nexport type PropertySelector = string | number | symbol;\nexport type PathSelector = (string | number)[];\nexport type FunctionSelector<RootState, S> = (s: RootState) => S;\nexport type Selector<RootState, S> =\n  | PropertySelector\n  | PathSelector\n  | FunctionSelector<RootState, S>;\n\n/** @hidden */\nexport const sniffSelectorType = <RootState, S>(\n  selector?: Selector<RootState, S>,\n) =>\n  !selector\n    ? 'nil'\n    : Array.isArray(selector)\n    ? 'path'\n    : 'function' === typeof selector\n    ? 'function'\n    : 'property';\n\n/** @hidden */\nexport const resolver = <RootState, S>(selector?: Selector<RootState, S>) => ({\n  property: (state: any) =>\n    state ? state[selector as PropertySelector] : undefined,\n  path: (state: RootState) => getIn(state, selector as PathSelector),\n  function: selector as FunctionSelector<RootState, S>,\n  nil: (state: RootState) => state,\n});\n\n/** @hidden */\nexport const resolveToFunctionSelector = <RootState, S>(\n  selector?: Selector<RootState, S>,\n) => resolver(selector)[sniffSelectorType(selector)];\n","import { AnyAction, Dispatch, Reducer } from 'redux';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { getIn } from '../utils/get-in';\nimport {\n  registerFractalReducer,\n  replaceLocalReducer,\n} from './fractal-reducer-map';\nimport { NgRedux } from './ng-redux';\nimport { ObservableStore } from './observable-store';\nimport {\n  Comparator,\n  PathSelector,\n  resolveToFunctionSelector,\n  Selector,\n} from './selectors';\n\n/** @hidden */\nexport class SubStore<State> implements ObservableStore<State> {\n  constructor(\n    private rootStore: NgRedux<any>,\n    private basePath: PathSelector,\n    localReducer: Reducer<State, AnyAction>,\n  ) {\n    registerFractalReducer(basePath, localReducer);\n  }\n\n  dispatch: Dispatch<AnyAction> = action =>\n    this.rootStore.dispatch({\n      ...(action as any),\n      '@angular-redux::fractalkey': JSON.stringify(this.basePath),\n    });\n\n  getState = (): State => getIn(this.rootStore.getState(), this.basePath);\n\n  configureSubStore = <SubState>(\n    basePath: PathSelector,\n    localReducer: Reducer<SubState, AnyAction>,\n  ): ObservableStore<SubState> =>\n    new SubStore<SubState>(\n      this.rootStore,\n      [...this.basePath, ...basePath],\n      localReducer,\n    );\n\n  select = <SelectedState>(\n    selector?: Selector<State, SelectedState>,\n    comparator?: Comparator,\n  ): Observable<SelectedState> =>\n    this.rootStore.select<State>(this.basePath).pipe(\n      map(resolveToFunctionSelector(selector)),\n      distinctUntilChanged(comparator),\n    );\n\n  subscribe = (listener: () => void): (() => void) => {\n    const subscription = this.select().subscribe(listener);\n    return () => subscription.unsubscribe();\n  };\n\n  replaceReducer = (nextLocalReducer: Reducer<State, AnyAction>) =>\n    replaceLocalReducer(this.basePath, nextLocalReducer);\n}\n","import {\n  AnyAction,\n  applyMiddleware,\n  compose,\n  createStore,\n  Dispatch,\n  Middleware,\n  Reducer,\n  Store,\n  StoreCreator,\n  StoreEnhancer,\n  Unsubscribe,\n} from 'redux';\n\nimport { NgZone } from '@angular/core';\nimport { BehaviorSubject, Observable, Observer } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { assert } from '../utils/assert';\nimport { enableFractalReducers } from './fractal-reducer-map';\nimport { NgRedux } from './ng-redux';\nimport { ObservableStore } from './observable-store';\nimport {\n  Comparator,\n  PathSelector,\n  resolveToFunctionSelector,\n  Selector,\n} from './selectors';\nimport { SubStore } from './sub-store';\n\n/** @hidden */\nexport class RootStore<RootState> extends NgRedux<RootState> {\n  private store: Store<RootState> | undefined = undefined;\n  private store$: BehaviorSubject<RootState>;\n\n  constructor(private ngZone: NgZone) {\n    super();\n\n    NgRedux.instance = this;\n    this.store$ = new BehaviorSubject<RootState | undefined>(undefined).pipe(\n      filter(n => n !== undefined),\n      switchMap(observableStore => observableStore as any),\n      // TODO: fix this? needing to explicitly cast this is wrong\n    ) as BehaviorSubject<RootState>;\n  }\n\n  configureStore = (\n    rootReducer: Reducer<RootState, AnyAction>,\n    initState: RootState,\n    middleware: Middleware[] = [],\n    enhancers: StoreEnhancer<RootState>[] = [],\n  ): void => {\n    assert(!this.store, 'Store already configured!');\n    // Variable-arity compose in typescript FTW.\n    this.setStore(\n      compose<StoreCreator>(\n        applyMiddleware(...middleware),\n        ...enhancers,\n      )(createStore)(enableFractalReducers(rootReducer), initState),\n    );\n  };\n\n  provideStore = (store: Store<RootState>) => {\n    assert(!this.store, 'Store already configured!');\n    this.setStore(store);\n  };\n\n  getState = (): RootState => this.store!.getState();\n\n  subscribe = (listener: () => void): Unsubscribe =>\n    this.store!.subscribe(listener);\n\n  replaceReducer = (nextReducer: Reducer<RootState, AnyAction>): void => {\n    this.store!.replaceReducer(nextReducer);\n  };\n\n  dispatch: Dispatch<AnyAction> = <A extends AnyAction>(action: A): A => {\n    assert(\n      !!this.store,\n      'Dispatch failed: did you forget to configure your store? ' +\n        'https://github.com/angular-redux/platform/blob/master/packages/store/' +\n        'README.md#quick-start',\n    );\n\n    if (!NgZone.isInAngularZone()) {\n      return this.ngZone.run(() => this.store!.dispatch(action));\n    } else {\n      return this.store!.dispatch(action);\n    }\n  };\n\n  select = <SelectedType>(\n    selector?: Selector<RootState, SelectedType>,\n    comparator?: Comparator,\n  ): Observable<SelectedType> =>\n    this.store$.pipe(\n      distinctUntilChanged(),\n      map(resolveToFunctionSelector(selector)),\n      distinctUntilChanged(comparator),\n    );\n\n  configureSubStore = <SubState>(\n    basePath: PathSelector,\n    localReducer: Reducer<SubState, AnyAction>,\n  ): ObservableStore<SubState> =>\n    new SubStore<SubState>(this, basePath, localReducer);\n\n  private setStore(store: Store<RootState>) {\n    this.store = store;\n    const storeServable = this.storeToObservable(store);\n    this.store$.next(storeServable as any);\n  }\n\n  private storeToObservable = (\n    store: Store<RootState>,\n  ): Observable<RootState> =>\n    new Observable<RootState>((observer: Observer<RootState>) => {\n      observer.next(store.getState());\n      const unsubscribeFromRedux = store.subscribe(() =>\n        observer.next(store.getState()),\n      );\n      return () => {\n        unsubscribeFromRedux();\n        observer.complete();\n      };\n    });\n}\n","import { NgModule, NgZone } from '@angular/core';\nimport { DevToolsExtension } from './components/dev-tools';\nimport { NgRedux } from './components/ng-redux';\nimport { RootStore } from './components/root-store';\n\n/** @hidden */\nexport function _ngReduxFactory(ngZone: NgZone) {\n  return new RootStore(ngZone);\n}\n\n@NgModule({\n  providers: [\n    DevToolsExtension,\n    { provide: NgRedux, useFactory: _ngReduxFactory, deps: [NgZone] },\n  ],\n})\nexport class NgReduxModule {}\n","import { Action } from 'redux';\n\nimport { NgRedux } from '../components/ng-redux';\nimport { getBaseStore } from './helpers';\n\n/**\n * Auto-dispatches the return value of the decorated function.\n *\n * Decorate a function creator method with @dispatch and its return\n * value will automatically be passed to ngRedux.dispatch() for you.\n */\nexport function dispatch(): PropertyDecorator {\n  return function decorate(\n    target: object,\n    key: string | symbol | number,\n    descriptor?: PropertyDescriptor,\n  ): PropertyDescriptor {\n    let originalMethod: () => Action;\n\n    const wrapped = function(this: unknown, ...args: any) {\n      const result = originalMethod.apply(this, args);\n      if (result !== undefined) {\n        const store = getBaseStore(this) || NgRedux.instance;\n        if (store) {\n          store.dispatch(result);\n        }\n      }\n      return result;\n    };\n\n    descriptor = descriptor || Object.getOwnPropertyDescriptor(target, key);\n\n    if (descriptor === undefined) {\n      const dispatchDescriptor: PropertyDescriptor = {\n        get: () => wrapped,\n        set: setMethod => (originalMethod = setMethod),\n      };\n      Object.defineProperty(target, key, dispatchDescriptor);\n      return dispatchDescriptor;\n    } else {\n      originalMethod = descriptor.value;\n      descriptor.value = wrapped;\n      return descriptor;\n    }\n  };\n}\n// get descriptor\n// if no descriptor, create one with getter setter\n// if descriptor, set original method to descriptor, and then bind the wrapped function instead\n","import { FractalStoreOptions, setClassOptions } from './helpers';\n\n/**\n * Modifies the behaviour of any `@select`, `@select$`, or `@dispatch`\n * decorators to operate on a substore defined by the IFractalStoreOptions.\n *\n * See:\n * https://github.com/angular-redux/platform/blob/master/packages/store/articles/fractal-store.md\n * for more information about SubStores.\n */\nexport function WithSubStore({\n  basePathMethodName,\n  localReducer,\n}: FractalStoreOptions): ClassDecorator {\n  return function decorate(constructor: Function): void {\n    setClassOptions(constructor, {\n      basePathMethodName,\n      localReducer,\n    });\n  };\n}\n"]}